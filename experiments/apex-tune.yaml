# Runs on a single g3.16xl AWS machine
apex:
    env: procgen_env_wrapper
    run: APEX
    stop:
        timesteps_total: 8000000
    checkpoint_freq: 100
    checkpoint_at_end: True
    keep_checkpoints_num: 5
    config:
        env_config:
            # Name of the procgen environment to train on # Note, that this parameter will be overriden during the evaluation by the AIcrowd evaluators.
            env_name: coinrun
            # The number of unique levels that can be generated. Set to 0 to use unlimited levels
            num_levels: 0
            # The lowest seed that will be used to generated levels. 'start_level' and 'num_levels' fully specify the set of possible levels
            start_level: 0
            # Paint player velocity info in the top left corner. Only supported by certain games.
            paint_vel_info: False
            # Use randomly generated assets in place of human designed assets
            use_generated_assets: False
            # center_agent : Determines whether observations are centered on the agent or display the full level. Override at your own risk.
            center_agent: True
            # sequential levels : When you reach the end of a level, the episode is ended and a new level is selected. If use_sequential_levels is set to True, reaching the end of a level does not end the episode, and the seed for the new level is derived from the current level seed. If you combine this with start_level=<some seed> and num_levels=1, you can have a single linear series of levels similar to a gym-retro or ALE game.
            use_sequential_levels: False
            # What variant of the levels to use, the options are "easy", "hard", "extreme", "memory", "exploration". All games support "easy" and "hard", while other options are game-specific. The default is "hard". Switching to "easy" will reduce the number of timesteps required to solve each game and is useful for testing or when working with limited compute resources. NOTE : During the evaluation phase (rollout), this will always be overriden to "easy"
            distribution_mode: easy
        
        use_pytorch: False
        double_q: True
        dueling: True
        num_atoms: 1
        noisy: False
        n_step: 3
        lr: .0005
        adam_epsilon: .00015
        hiddens: [512]
        buffer_size: 1000000
        explore: True
        exploration_config:
          type: "PerWorkerEpsilonGreedy"
          #initial_epsilon: 1.0
          #final_epsilon: 0.01
          #epsilon_timesteps: 200000
        
        evaluation_config:
          explore: False
          
        prioritized_replay_alpha: 0.5
        final_prioritized_replay_beta: 1.0
        prioritized_replay_beta_annealing_timesteps: 2000000

        num_cpus_per_worker: 1
        num_gpus_per_worker: 0.1
        num_cpus_for_driver: 1
        num_gpus: 0.3

        # APEX
        num_workers: 8
        num_envs_per_worker: 12
        rollout_fragment_length: 20
        train_batch_size: 1024
        target_network_update_freq: 50000
        timesteps_per_iteration: 25000
        
        preprocessor_pref: deepmind
        
        model:
          conv_filters: [[32, [8, 8], 4], [64, [4, 4], 2], [128, [8, 8], 1]]
          grayscale: False
